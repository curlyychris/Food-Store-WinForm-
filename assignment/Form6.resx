<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CrrcAAAAAElFTkSuQmCC
</value>
  </data>
</root>